version: '3'
services:
  postgres:
    restart: unless-stopped
    env_file: .env
    image: arthurescriou/strapi-pg:1.0.0
    environment:
      POSTGRES_USER: ${DATABASE_USERNAME}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
      
    ports:
        - '5432:5432'
    networks:
      - bruno
    volumes:
      - postgres-data:/var/lib/postgresql/data

  mana:
    image: arthurescriou/strapi:1.0.0
    env_file:
      - ./.env
    environment:
      DATABASE_CLIENT: ${DATABASE_CLIENT}
      DATABASE_HOST: postgres
      DATABASE_PORT: ${DATABASE_PORT}
      DATABASE_NAME: ${DATABASE_NAME}
      DATABASE_USERNAME: ${DATABASE_USERNAME}
      DATABASE_PASSWORD: ${DATABASE_PASSWORD}
      JWT_SECRET: ${JWT_SECRET}
      ADMIN_JWT_SECRET: ${ADMIN_JWT_SECRET}
      APP_KEYS: ${APP_KEYS}
      PORT: 1337
    ports:
      - '1337:1337'
    depends_on:
      - postgres
    networks:
      - bruno
    volumes:
      - strapi-data:/usr/src/app/public/uploads
      - strapi-db-data:/usr/src/app/data

  opsci-strapi-frontend:
    build:
      context: ../opsci-strapi-frontend
      dockerfile: Dockerfile
    ports:
      - '5173:5173'
    depends_on:
      - mana
    env_file:
      - ./.env
    volumes:
      - strapi-db-data:/usr/src/app/data    

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - '2181:2181'
    expose:
      - "2181"
    networks:
      - bruno

  kafka:
    image: wurstmeister/kafka:2.11-1.1.1
    container_name: kafka
    ports:
      - "9092:9092"
      - "9093:9093"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://localhost:9093,OUTSIDE://kafka:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKAJS_NO_PARTITIONER_WARNING: "1" 
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_NO_LISTENER_AUTHENTICATION_PLAINTEXT: "true"
      KAFKA_NO_LISTENER_AUTHENTICATION_SSL: "true"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG_RETENTION_HOURS: 168
      KAFKA_LOG_RETENTION_BYTES: 1073741824
      KAFKA_LOG_DIRS: /kafka/logs
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    networks:
      - bruno

  MQTT:
    image: eclipse-mosquitto
    container_name : MQTT
    ports:
      - "1883:1883"
    environment : 
      TOPIC: "topic"
      ADDRESS: "ws://MQTT:1883"
      PORT: 1883
    volumes:
      - /Users/nanthushan/Desktop/Projet-Strapi/mosquitto.conf:/mosquitto/config/mosquitto.conf
    networks:
      - bruno
    
  connect:
    image: arthurescriou/mqtt-kafka-connector:1.0.0
    environment:
      BROKER_1: 'kafka:9092'
      BROKER_2: 'kafka:9092'
      BROKER_3: 'kafka:9092'
      KAFKA_TOPIC: 'stock'
      MQTT_TOPIC: 'topic'
      MQTT_ENDPOINT: 'ws://MQTT:1883'
    depends_on:
      - kafka
      - MQTT
    networks:
      - bruno



  product-producer:
    env_file: .env
    image: arthurescriou/product-producer:1.0.0
    environment:
      BROKER_1: ${BROKER_1}
      BROKER_2: ${BROKER_2}
      BROKER_3: ${BROKER_3}
      STRAPI_TOKEN: ${STRAPI_TOKEN}
      STRAPI_URL: ${STRAPI_URL}
      TOPIC: ${TOPIC}
      ERROR_TOPIC: ${ERROR_TOPIC}
      FILE_NAME: products.csv
    volumes:
      - /Users/nanthushan/Desktop/Projet-Strapi/products.csv:/products.csv
    networks:
      - bruno
    depends_on:
      - product-consumer
      - kafka

  product-consumer:
    image: arthurescriou/product-consumer:1.0.3
    environment:
      BROKER_1: ${BROKER_1}
      BROKER_2: ${BROKER_2}
      BROKER_3: ${BROKER_3}
      STRAPI_TOKEN: ${STRAPI_TOKEN}
      STRAPI_URL: ${STRAPI_URL}
      TOPIC: ${TOPIC}
      ERROR_TOPIC: ${ERROR_TOPIC}
      BEGINNING: ${BEGINNING}
    networks:
      - bruno
    depends_on:
      - kafka

  event-producer:
    env_file: .env
    image: arthurescriou/event-producer:1.0.3
    environment:
      BROKER_1: ${BROKER_1}
      BROKER_2: ${BROKER_2}
      BROKER_3: ${BROKER_3}
      STRAPI_TOKEN: ${STRAPI_TOKEN}
      STRAPI_URL: ${STRAPI_URL}
      TOPIC: ${TOPIC2}
      ERROR_TOPIC: ${ERROR_TOPIC}
      FILE_NAME: events.csv
    volumes:
     - /Users/nanthushan/Desktop/Projet-Strapi/events.csv:/events.csv
    networks:
      - bruno
    depends_on:
      - event-consumer
      - kafka

  event-consumer:
    image: arthurescriou/event-consumer:1.0.0
    env_file:
      - .env
    environment:
      BROKER_1: ${BROKER_1}
      BROKER_2: ${BROKER_2}
      BROKER_3: ${BROKER_3}
      STRAPI_TOKEN: ${STRAPI_TOKEN}
      STRAPI_URL: ${STRAPI_URL}
      TOPIC: ${TOPIC2}
      ERROR_TOPIC: ${ERROR_TOPIC}
      BEGINNING: ${BEGINNING}
    networks:
      - bruno
    depends_on:
      - kafka
  
  stock-producer:
    env_file: .env
    image: arthurescriou/stock-producer:1.0.1
    environment:
      BROKER_1: ${BROKER_1}
      BROKER_2: ${BROKER_2}
      BROKER_3: ${BROKER_3}
      STRAPI_TOKEN: ${STRAPI_TOKEN}
      STRAPI_URL: ${STRAPI_URL}
      TOPIC: ${TOPIC3}
      ERROR_TOPIC: ${ERROR_TOPIC}
      FILE_NAME: stocks.csv
    volumes:
     - /Users/nanthushan/Desktop/Projet-Strapi/stocks.csv:/stocks.csv
    networks:
      - bruno
    depends_on:
      - stock-consumer
      - kafka
      
  stock-consumer:
    env_file: .env
    image: arthurescriou/stock-consumer:1.0.2
    environment:
      BROKER_1: ${BROKER_1}
      BROKER_2: ${BROKER_2}
      BROKER_3: ${BROKER_3}
      STRAPI_TOKEN: ${STRAPI_TOKEN}
      STRAPI_URL: ${STRAPI_URL}
      TOPIC: ${TOPIC3} 
      ERROR_TOPIC: ${ERROR_TOPIC}
      BEGINNING: ${BEGINNING}
    networks:
      - bruno
    depends_on:
      - kafka

networks:
  bruno:
    driver: bridge

volumes:
  postgres-data:
  strapi-data:
  strapi-db-data:
  